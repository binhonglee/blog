<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project Presentation on BinHong Lee&#39;s Blog</title>
    <link>https://binhong.me/blog/tags/project-presentation/</link>
    <description>Recent content in Project Presentation on BinHong Lee&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>binhong@binhong.me (BinHong Lee)</managingEditor>
    <webMaster>binhong@binhong.me (BinHong Lee)</webMaster>
    <lastBuildDate>Fri, 28 Nov 2025 00:00:00 -0800</lastBuildDate><atom:link href="https://binhong.me/blog/tags/project-presentation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leaked `FakeIncorrectPassword`</title>
      <link>https://binhong.me/blog/2025-10-31-leaked-fakeincorrectpassword/</link>
      <pubDate>Fri, 31 Oct 2025 00:00:00 -0800</pubDate>
      <author>binhong@binhong.me (BinHong Lee)</author>
      <guid>https://binhong.me/blog/2025-10-31-leaked-fakeincorrectpassword/</guid>
      <description>&lt;p&gt;It was Thanksgiving day and I was mostly chilling at home scrolling Threads while watching YouTube. I then came across this post:&lt;/p&gt;
&lt;div class=&#34;threads_wrapper&#34;&gt;
  &lt;a href=&#34;https://www.threads.net/@justinamphlett/post/DC7O6MHOXaX&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; class=&#34;threads&#34;&gt;
    &lt;p class=&#34;handle&#34;&gt;@justinamphlett&lt;/p&gt;
    &lt;svg class=&#34;logo&#34; aria-label=&#34;Threads&#34; viewBox=&#34;0 0 192 192&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M141.537 88.9883C140.71 88.5919 139.87 88.2104 139.019 87.8451C137.537 60.5382 122.616 44.905 97.5619 44.745C97.4484 44.7443 97.3355 44.7443 97.222 44.7443C82.2364 44.7443 69.7731 51.1409 62.102 62.7807L75.881 72.2328C81.6116 63.5383 90.6052 61.6848 97.2286 61.6848C97.3051 61.6848 97.3819 61.6848 97.4576 61.6855C105.707 61.7381 111.932 64.1366 115.961 68.814C118.893 72.2193 120.854 76.925 121.825 82.8638C114.511 81.6207 106.601 81.2385 98.145 81.7233C74.3247 83.0954 59.0111 96.9879 60.0396 116.292C60.5615 126.084 65.4397 134.508 73.775 140.011C80.8224 144.663 89.899 146.938 99.3323 146.423C111.79 145.74 121.563 140.987 128.381 132.296C133.559 125.696 136.834 117.143 138.28 106.366C144.217 109.949 148.617 114.664 151.047 120.332C155.179 129.967 155.42 145.8 142.501 158.708C131.182 170.016 117.576 174.908 97.0135 175.059C74.2042 174.89 56.9538 167.575 45.7381 153.317C35.2355 139.966 29.8077 120.682 29.6052 96C29.8077 71.3178 35.2355 52.0336 45.7381 38.6827C56.9538 24.4249 74.2039 17.11 97.0132 16.9405C119.988 17.1113 137.539 24.4614 149.184 38.788C154.894 45.8136 159.199 54.6488 162.037 64.9503L178.184 60.6422C174.744 47.9622 169.331 37.0357 161.965 27.974C147.036 9.60668 125.202 0.195148 97.0695 0H96.9569C68.8816 0.19447 47.2921 9.6418 32.7883 28.0793C19.8819 44.4864 13.2244 67.3157 13.0007 95.9325L13 96L13.0007 96.0675C13.2244 124.684 19.8819 147.514 32.7883 163.921C47.2921 182.358 68.8816 191.806 96.9569 192H97.0695C122.03 191.827 139.624 185.292 154.118 170.811C173.081 151.866 172.51 128.119 166.26 113.541C161.776 103.087 153.227 94.5962 141.537 88.9883ZM98.4405 129.507C88.0005 130.095 77.1544 125.409 76.6196 115.372C76.2232 107.93 81.9158 99.626 99.0812 98.6368C101.047 98.5234 102.976 98.468 104.871 98.468C111.106 98.468 116.939 99.0737 122.242 100.233C120.264 124.935 108.662 128.946 98.4405 129.507Z&#34; fill=&#34;currentColor&#34;/&gt;
    &lt;/svg&gt;&lt;p class=&#34;description&#34;&gt;
      Found a pretty horrific dark pattern with Instagram. If you try to log in on mobile web, it fails with ‘incorrect password’. I double check… it’s right, it’s just not working. Gave up, installed the app, password is fine. Tried again today just to see… this time I get the following error message. Looks like a translation key is missing and it’s serving me the backend name for it? FakeIncorrectPassword ?? Are you shitting me?
    &lt;/p&gt;&lt;div class=&#34;image&#34;&gt;
      &lt;img src=&#34;https://binhong.me/blog/2025-10-31-leaked-fakeincorrectpassword//blog/468513146_835635298542082_280700232251535875_n_5078384436995653656.jpg&#34; alt=&#34;Post image&#34; loading=&#34;lazy&#34;&gt;
    &lt;/div&gt;&lt;/a&gt;
&lt;/div&gt;
  
&lt;p&gt;I immediately recognized that the screenshot is bad. &lt;code&gt;FakeIncorrectPassword&lt;/code&gt; is an internal error code used when the integrity system thinks you&amp;rsquo;re a bad actor (bot, scraper, credential stuffer etc) and so we would show you an &lt;em&gt;Incorrect Password&lt;/em&gt; error message regardless of whether the password is correct. But as seen in the screenshot, we show the raw &lt;code&gt;FakeIncorrectPassword&lt;/code&gt; string directly instead of the regular &lt;em&gt;Incorrect Password&lt;/em&gt; error.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is part of a series &lt;a href=&#34;https://binhong.me/blog/project-presentation/&#34;&gt;(Project Presentation)&lt;/a&gt; where I share stories of my past projects.&lt;/em&gt;&lt;/p&gt;
        
&lt;a class=&#34;anchor&#34; href=&#34;#notifying-owners&#34;&gt;
    &lt;h2 id=&#34;notifying-owners&#34;&gt;
        &lt;span class=&#34;text&#34;&gt;Notifying owners&lt;/span&gt;
        &lt;span class=&#34;tag&#34;&gt;#&lt;/span&gt;
    &lt;/h2&gt;
&lt;/a&gt;
&lt;p&gt;The user noted that this happens on mobile web which means they happened to land on a test group, since a sister team had just started public testing this new UI / flow on mobile web. I tried ringing up the oncall for their team (who also happened to be the owner of the public test) but I saw that they had actually marked themselves out-of-office for the whole weekend through the upcoming Monday. Well, that&amp;rsquo;s not good (also weird that they were off while oncall❓).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://binhong.me/blog/img/fakeincorrectpassword1.png&#34; target=&#34;_blank&#34;&gt;
    
    &lt;figure&gt;
        &lt;img src=&#34;https://binhong.me/blog/2025-10-31-leaked-fakeincorrectpassword//blog/img/fakeincorrectpassword1.png&#34;&gt;
        &lt;figcaption&gt;Comparison between old vs new login screen&lt;/figcaption&gt;
    &lt;/figure&gt;
    
&lt;/a&gt;
&lt;/p&gt;
&lt;a class=&#34;anchor&#34; href=&#34;#investigation&#34;&gt;
    &lt;h2 id=&#34;investigation&#34;&gt;
        &lt;span class=&#34;text&#34;&gt;Investigation&lt;/span&gt;
        &lt;span class=&#34;tag&#34;&gt;#&lt;/span&gt;
    &lt;/h2&gt;
&lt;/a&gt;
&lt;p&gt;Anyway, I had a few hours to kill before I needed to leave to join my friends&amp;rsquo; Thanksgiving party. I looked at the time and told myself &lt;em&gt;&amp;ldquo;I have time&amp;rdquo;&lt;/em&gt; so I decided to start debugging it myself. I&amp;rsquo;d worked tangentially with this stuff before so I knew a few other things (like 2FA) that also need special handling should be working as intended. My hunch told me that this was caused by the gap between the Python stack (IG server) throwing some error that wasn&amp;rsquo;t properly consumed by the Hack server stack (that determines the UI). So I searched for &lt;code&gt;FakeIncorrectPassword&lt;/code&gt; in the Python stack and found something like &lt;code&gt;TwoFactorError&lt;/code&gt;. Then, I looked for &lt;code&gt;TwoFactorError&lt;/code&gt; in the Hack stack to see how it works and eventually found the one that didn&amp;rsquo;t handle the case for &lt;code&gt;FakeIncorrectPassword&lt;/code&gt;. Simple enough, I just had to add more stuff (iirc I added a few others as well as the aforementioned &lt;code&gt;FakeIncorrectPassword&lt;/code&gt;) to the existing switch case.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://binhong.me/blog/img/fakeincorrectpassword2.png&#34; target=&#34;_blank&#34;&gt;
    
    &lt;figure&gt;
        &lt;img src=&#34;https://binhong.me/blog/2025-10-31-leaked-fakeincorrectpassword//blog/img/fakeincorrectpassword2.png&#34;&gt;
        &lt;figcaption&gt;Simple diagram to show how the calls relate&lt;/figcaption&gt;
    &lt;/figure&gt;
    
&lt;/a&gt;
&lt;/p&gt;
&lt;a class=&#34;anchor&#34; href=&#34;#testing&#34;&gt;
    &lt;h2 id=&#34;testing&#34;&gt;
        &lt;span class=&#34;text&#34;&gt;Testing&lt;/span&gt;
        &lt;span class=&#34;tag&#34;&gt;#&lt;/span&gt;
    &lt;/h2&gt;
&lt;/a&gt;
&lt;p&gt;At first, I tried triggering the &lt;code&gt;FakeIncorrectPassword&lt;/code&gt; error on my devserver to test the fix but I don&amp;rsquo;t really know how most of these things work (having never worked on integrity teams). I eventually figured I could just comment out the integrity system calls and just always force return &lt;code&gt;FakeIncorrectPassword&lt;/code&gt; error. Trigger login and take a screenshot for both before and after the fix. Done! I sent the fix out for review and waited for a bit to make sure everything turned green on CI before leaving for the Thanksgiving party (didn&amp;rsquo;t want to bring my laptop with me since I wasn&amp;rsquo;t actually oncall lol).&lt;/p&gt;
&lt;a class=&#34;anchor&#34; href=&#34;#shipping&#34;&gt;
    &lt;h2 id=&#34;shipping&#34;&gt;
        &lt;span class=&#34;text&#34;&gt;Shipping&lt;/span&gt;
        &lt;span class=&#34;tag&#34;&gt;#&lt;/span&gt;
    &lt;/h2&gt;
&lt;/a&gt;
&lt;p&gt;Before heading out, I tagged 2 other oncalls (on top of the OOO oncall) to let them know that I&amp;rsquo;d written the fix and I&amp;rsquo;d let them decide if they wanted to ship it or wait till Monday. One of them saw it and immediately approved + shipped my fix. Monday came around and my change got the attention of a few people from the security team. They eventually filed a post-hoc SEV for this and did an in-depth review on what went wrong in the process that led to the leak of this error message.&lt;/p&gt;
&lt;a class=&#34;anchor&#34; href=&#34;#takeaway&#34;&gt;
    &lt;h2 id=&#34;takeaway&#34;&gt;
        &lt;span class=&#34;text&#34;&gt;Takeaway&lt;/span&gt;
        &lt;span class=&#34;tag&#34;&gt;#&lt;/span&gt;
    &lt;/h2&gt;
&lt;/a&gt;
&lt;p&gt;The main culprit here is that most Instagram code lives in a different stack (Python) than where the UI is (Hack) and a lot of the Python code just uses &lt;code&gt;string&lt;/code&gt; everywhere instead of proper enums for something like this, making it really hard to keep track of all the potential edge cases that could be missed. Having some familiarity with both the Python and the Hack stacks made it easier to trace the problem and spot the gap in the error handling logic. The fix itself was straightforward once I found the right place, but getting there required understanding how errors flow between multiple systems.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shipping a project with -2M MAP</title>
      <link>https://binhong.me/blog/2025-10-03-shipping-negative-2m-map/</link>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0800</pubDate>
      <author>binhong@binhong.me (BinHong Lee)</author>
      <guid>https://binhong.me/blog/2025-10-03-shipping-negative-2m-map/</guid>
      <description>&lt;p&gt;There&amp;rsquo;s a saying in Meta that &amp;lsquo;Nothing is somebody else&amp;rsquo;s problem&amp;rsquo; but sometimes, it really is. At this point in time, I was working on a growth team whose top-line goal was to grow Facebook MAP (monthly active people). So naturally, it&amp;rsquo;s surprising for me to have shipped something that directly regressed the very metric the team should be growing.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is part of a series &lt;a href=&#34;https://binhong.me/blog/project-presentation/&#34;&gt;(Project Presentation)&lt;/a&gt; where I share stories of my past projects.&lt;/em&gt;&lt;/p&gt;
        
&lt;a class=&#34;anchor&#34; href=&#34;#background&#34;&gt;
    &lt;h2 id=&#34;background&#34;&gt;
        &lt;span class=&#34;text&#34;&gt;Background&lt;/span&gt;
        &lt;span class=&#34;tag&#34;&gt;#&lt;/span&gt;
    &lt;/h2&gt;
&lt;/a&gt;
&lt;p&gt;This was still within the first year of me joining the team. Unfortunately, up to this point, I hadn&amp;rsquo;t had any successful (+MAP) launches, and I&amp;rsquo;d been eager to prove myself. The most recent project I worked on before this was to show an educational screen to users right after they logged in (under a specific condition) before they got redirected to newsfeed. Once a user logs an impression on newsfeed, they are considered MAP.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://binhong.me/blog/img/negative_2m_map_1.png&#34; target=&#34;_blank&#34;&gt;
    
    &lt;img src=&#34;https://binhong.me/blog/2025-10-03-shipping-negative-2m-map//blog/img/negative_2m_map_1.png&#34;&gt;
    
&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;My project failed because for some reason it logged a MAP increase on the very first day - which didn&amp;rsquo;t make sense because users should be MAP on the first day regardless of whether they&amp;rsquo;re in the test or control group. If anything, it could have had a slight drop if users dropped off on the interstitial before they reached newsfeed. At this point, my manager suggested that we move on to something else since no one really knew why. I was, however, adamant about figuring out what happened, so I started digging into it anyway. (&lt;strong&gt;major mistake&lt;/strong&gt;)&lt;/p&gt;
&lt;a class=&#34;anchor&#34; href=&#34;#the-bug&#34;&gt;
    &lt;h2 id=&#34;the-bug&#34;&gt;
        &lt;span class=&#34;text&#34;&gt;The Bug&lt;/span&gt;
        &lt;span class=&#34;tag&#34;&gt;#&lt;/span&gt;
    &lt;/h2&gt;
&lt;/a&gt;
&lt;p&gt;I dug through the stacktrace step-by-step, the code line-by-line, until I saw a variable that caught my eye: &lt;code&gt;is_platform_login&lt;/code&gt;. For some reason, when it was true, we ignored the &lt;code&gt;next&lt;/code&gt; param in redirection. I didn&amp;rsquo;t know what &amp;ldquo;platform login&amp;rdquo; was, so it was time to get some help. I asked my mentor / tech lead what &amp;ldquo;platform login&amp;rdquo; was and was told that it&amp;rsquo;s third-party login (think &amp;ldquo;Login with Facebook&amp;rdquo; on other sites). It&amp;rsquo;s something owned by a separate team, and I should go ask this specific person (Kevin) if I had more questions about it. So I decided to test how it worked. I opened up Spotify, clicked &amp;ldquo;Login with Facebook,&amp;rdquo; then logged in (through that specific condition), and thereafter I was redirected to FB Newsfeed instead of going back to Spotify to complete my login!&lt;/p&gt;
&lt;a class=&#34;anchor&#34; href=&#34;#discovering-the-scope&#34;&gt;
    &lt;h2 id=&#34;discovering-the-scope&#34;&gt;
        &lt;span class=&#34;text&#34;&gt;Discovering the scope&lt;/span&gt;
        &lt;span class=&#34;tag&#34;&gt;#&lt;/span&gt;
    &lt;/h2&gt;
&lt;/a&gt;
&lt;p&gt;First, I looked up the blame and just asked the person (on a sister team) why they explicitly excluded platform login from this redirection. They told me that&amp;rsquo;s just how the team tests and ships new features in general. Fair, but I didn&amp;rsquo;t think it made sense in this case. So I reached out to Kevin and asked if they were aware of the bug. They were surprised and agreed with my assessment that it should be fixed.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://binhong.me/blog/img/negative_2m_map_2.png&#34; target=&#34;_blank&#34;&gt;
    
    &lt;img src=&#34;https://binhong.me/blog/2025-10-03-shipping-negative-2m-map//blog/img/negative_2m_map_2.png&#34;&gt;
    
&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;I merged the change and started an experiment for the fix. After a while, I pulled the metrics on the experiment and saw that it regressed MAP heavily, around 2M MAP. This wasn&amp;rsquo;t exactly surprising, as you&amp;rsquo;ve seen in the image above, since we were redirecting the users back to the third-party platform source, which no longer counted them as MAP. I went back to Kevin and asked what their team&amp;rsquo;s goal metrics were and if they had a data scientist on their team willing to help with experiment analysis.&lt;/p&gt;
&lt;a class=&#34;anchor&#34; href=&#34;#justifying-the-ship&#34;&gt;
    &lt;h2 id=&#34;justifying-the-ship&#34;&gt;
        &lt;span class=&#34;text&#34;&gt;Justifying the ship&lt;/span&gt;
        &lt;span class=&#34;tag&#34;&gt;#&lt;/span&gt;
    &lt;/h2&gt;
&lt;/a&gt;
&lt;p&gt;We brought the experiment to be reviewed. (If you aren&amp;rsquo;t familiar, &lt;a href=&#34;https://binhong.me/blog/2025-06-27-experiment-review-process/&#34;&gt;here&amp;rsquo;s a previous article on how experiment review works&lt;/a&gt;.) Most people understood the reasoning behind the ship recommendation, but there were some questions around better understanding whether this was intended user behavior. After some back-and-forth, we agreed to ship this with a long-term holdout to study the potential long-term MAP effect.&lt;/p&gt;
&lt;p&gt;A few months later, we pulled the data for the long-term holdout and verified that the long-term MAP regression was closer to 20k. This meant that 90% of the users who were &lt;em&gt;forced&lt;/em&gt; to newsfeed (caused by the &lt;em&gt;bug&lt;/em&gt;) did not stay MAP for very long and eventually churned one way or another anyway. It&amp;rsquo;s likely because these users did not intent to &lt;em&gt;actually use&lt;/em&gt; Facebook to begin with, thus also unlikely to stick around when they were &lt;em&gt;wrongly&lt;/em&gt; redirected.&lt;/p&gt;
&lt;a class=&#34;anchor&#34; href=&#34;#takeaway&#34;&gt;
    &lt;h2 id=&#34;takeaway&#34;&gt;
        &lt;span class=&#34;text&#34;&gt;Takeaway&lt;/span&gt;
        &lt;span class=&#34;tag&#34;&gt;#&lt;/span&gt;
    &lt;/h2&gt;
&lt;/a&gt;
&lt;p&gt;For one, I was penalized for essentially spending too much time on work that wasn&amp;rsquo;t aligned with the team I was on. Realistically, I should have taken my manager&amp;rsquo;s advice to move on to another project. Even after I&amp;rsquo;d found the bug, I should have passed this off to Kevin and their team to run the experiment and provided support instead of trying to be the hero. The results from the long-term holdout also didn&amp;rsquo;t materialize until the next performance review cycle, so that definitely didn&amp;rsquo;t help.&lt;/p&gt;
&lt;p&gt;Finally, I still never actually figured out whether this was the bug that was causing my original project to fail. We suspect it might be related, but I never re-ran it and never got any sort of verification that it solved the issue. It was a lot of learning experience for me overall, but at least I delivered (imo) the ideal user experience and was able to justify the change &lt;em&gt;despite&lt;/em&gt; the team&amp;rsquo;s goal metrics.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
