<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Continuous Integration on Ink Mortar</title><link>https://binhong.me/blog/tags/continuous-integration/</link><description>Recent content in Continuous Integration on Ink Mortar</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 18 Jul 2021 00:00:00 -0800</lastBuildDate><atom:link href="https://binhong.me/blog/tags/continuous-integration/index.xml" rel="self" type="application/rss+xml"/><item><title>PostgreSQL on Azure Pipeline with OSX</title><link>https://binhong.me/blog/postgresql-on-azure/</link><pubDate>Sun, 18 Jul 2021 00:00:00 -0800</pubDate><guid>https://binhong.me/blog/postgresql-on-azure/</guid><description>While the defacto way of running postgres on Azure Pipeline according to this guide seems to be using the docker image, the MacOS image on Azure Pipeline does not have docker support due to some licensing issue. So instead, this has to be setup and handled manually. We&amp;rsquo;d use brew here since it comes installed in the OS image and is the easiest way to deal with it as far as I&amp;rsquo;m aware.</description></item><item><title>How to host multiple domain names and projects on one server</title><link>https://binhong.me/blog/2018-08-29-how-to-host-multiple-domain-names-and-projects-on-one-server/</link><pubDate>Wed, 29 Aug 2018 00:00:00 -0800</pubDate><guid>https://binhong.me/blog/2018-08-29-how-to-host-multiple-domain-names-and-projects-on-one-server/</guid><description>I own multiple domain names, and each one hosts a different side project. For the longest time, everything that required ‘hosting’ was hosted on Heroku. But their free tier can be quite limited, it can also get costly quickly if you are paying for each separate project. So instead, I decided to explore putting all of them together using NGINX (recommended to me by Jane Manchun Wong).
Required Resources Virtual Private Server (VPS) You’ll need a virtual server such as DigitalOcean or EC2 by AWS.</description></item><item><title>Hosting your own Git server with Gitea</title><link>https://binhong.me/blog/2018-08-20-hosting-your-own-git-server-with-gitea/</link><pubDate>Mon, 20 Aug 2018 00:00:00 -0800</pubDate><guid>https://binhong.me/blog/2018-08-20-hosting-your-own-git-server-with-gitea/</guid><description>Most people (including myself) host their personal projects on a third-party free Git hosting websites like GitHub, GitLab, Bitbucket etc. While that is sufficient for most people, it is also pretty fun to have your own Git service hosted on your own domain name of choice. While I trust my fellow engineers at these companies, I am using this as a personally backup to those services if anything goes wrong (like GitLab.</description></item><item><title>Getting started with Travis-CI</title><link>https://binhong.me/blog/2018-04-22-getting-started-with-travis-ci/</link><pubDate>Sun, 22 Apr 2018 00:00:00 -0800</pubDate><guid>https://binhong.me/blog/2018-04-22-getting-started-with-travis-ci/</guid><description>What is CI and why should I care about it? CI stands for Continuous Integration which as the name suggests, is an integrated tests that runs continuously on every time when someone pushes a commit (or mostly when opening a Pull Request).
As for why is it important, it automates the whole testing modules. Ideally, you would still want to test your changes locally before pushing them to remote but in some occasion where you forgot or the program requires a lot more resources than your current machine can handle, CI comes in very handy.</description></item></channel></rss>