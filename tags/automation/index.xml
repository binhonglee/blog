<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Automation on BinHong Lee's Blog</title><link>https://binhong.me/blog/tags/automation/</link><description>Recent content in Automation on BinHong Lee's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 09 Aug 2020 00:00:00 -0800</lastBuildDate><atom:link href="https://binhong.me/blog/tags/automation/index.xml" rel="self" type="application/rss+xml"/><item><title>Cross Language Object Parsing</title><link>https://binhong.me/blog/2020-08-09-cross-language-object-parsing/</link><pubDate>Sun, 09 Aug 2020 00:00:00 -0800</pubDate><guid>https://binhong.me/blog/2020-08-09-cross-language-object-parsing/</guid><description>I was working on a side project where I had the backend and frontend setup to run on different programming languages. As I was working on it, it started to bug me a little that I have to write the same object / struct and enum for each language in use everytime I introduce a new enum or struct. It can also be confusing / dangerous if I updated one side and forget to update the other.</description></item><item><title>Multi-language Support Build Tool</title><link>https://binhong.me/blog/2019-08-07-multi-language-support-build-tool/</link><pubDate>Wed, 07 Aug 2019 00:00:00 -0800</pubDate><guid>https://binhong.me/blog/2019-08-07-multi-language-support-build-tool/</guid><description>I recently started learning about Go to find out what’s all the hype about. So I figured what’s a better way than to build a project out of it? As I was setting up my machine and going through tutorials step-by-step, I was slightly annoyed by the fact that the development of Go projects are limited to inside the $GOPATH.
Personally, I have all my side projects stored at the top level of the computer.</description></item><item><title>Functional and flexible shell scripting tricks</title><link>https://binhong.me/blog/2019-05-07-shell-scripting/</link><pubDate>Tue, 07 May 2019 00:00:00 -0800</pubDate><guid>https://binhong.me/blog/2019-05-07-shell-scripting/</guid><description>Shell scripts vs python or perl Its 2019 now, who writes shell scripts anymore? Am I right? Well, apparently I do. ¯\_(ツ)_/¯
There are some good arguments for that here and here which mainly revolve around 2 things:
Shell exists in all Unix systems and makes use of system default features. Shell is an &amp;ldquo;interactive command function&amp;rdquo; designed to get user inputs during the process of running them. Also, here&amp;rsquo;s an additional relevant reading about the differences between sh and bash.</description></item></channel></rss>